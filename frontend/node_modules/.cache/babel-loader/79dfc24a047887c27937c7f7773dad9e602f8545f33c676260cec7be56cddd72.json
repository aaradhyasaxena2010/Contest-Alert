{"ast":null,"code":"var _jsxFileName = \"/Users/ambarsinha/Desktop/Contest Alert/frontend/src/components/Preferences.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function Preferences() {\n//     const [preferences, setPreferences] = useState({\n//         leetcode: false,\n//         codeforces: {\n//             div1: false,\n//             div3: false,\n//             div4: false\n//         }\n//     });\n//     const [message, setMessage] = useState('');\n\n//     const handleCheckboxChange = (event) => {\n//         const { name, checked } = event.target;\n//         if (name === 'leetcode') {\n//             setPreferences({ ...preferences, leetcode: checked });\n//         } else {\n//             // Update Codeforces preference (div1, div3, or div4)\n//             setPreferences({\n//                 ...preferences,\n//                 codeforces: { ...preferences.codeforces, [name]: checked }\n//             });\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post(\n//                 'http://localhost:5001/api/user/preferences',\n//                 { reminderPreferences: preferences },\n//                 { withCredentials: true }\n//             );\n//             setMessage('Preferences updated successfully.');\n//         } catch (error) {\n//             console.error(\"Error updating preferences:\", error);\n//             setMessage('Error updating preferences.');\n//         }\n//     };\n\n//     return (\n//         <div style={{ padding: '20px' }}>\n//             <h1>User Preferences</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div style={{ marginBottom: '1rem' }}>\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"leetcode\"\n//                             checked={preferences.leetcode}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Receive reminders for LeetCode contests\n//                     </label>\n//                 </div>\n//                 <div style={{ marginBottom: '1rem' }}>\n//                     <h3>Codeforces Contest Reminders</h3>\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div1\"\n//                             checked={preferences.codeforces.div1}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div1\n//                     </label>\n//                     <br />\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div3\"\n//                             checked={preferences.codeforces.div3}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div3\n//                     </label>\n//                     <br />\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div4\"\n//                             checked={preferences.codeforces.div4}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div4\n//                     </label>\n//                 </div>\n//                 <button type=\"submit\" style={{ padding: '10px 20px' }}>Update Preferences</button>\n//             </form>\n//             {message && <p style={{ marginTop: '1rem' }}>{message}</p>}\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preferences() {\n  _s();\n  const [preferences, setPreferences] = useState({\n    leetcode: false,\n    codeforces: {\n      div1: false,\n      div3: false,\n      div4: false\n    }\n  });\n  const [message, setMessage] = useState('');\n\n  // 1) Fetch the user's preferences when the component mounts\n  useEffect(() => {\n    async function fetchPreferences() {\n      try {\n        // GET request to /api/user-preferences\n        const response = await axios.get('http://localhost:5001/api/user-preferences', {\n          withCredentials: true\n        });\n        // response.data should look like:\n        // { leetcode: true/false, codeforces: { div1: ..., div3: ..., div4: ... } }\n        setPreferences(response.data);\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    }\n    fetchPreferences();\n  }, []);\n\n  // 2) Handle checkbox changes locally in state\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    if (name === 'leetcode') {\n      setPreferences({\n        ...preferences,\n        leetcode: checked\n      });\n    } else {\n      setPreferences({\n        ...preferences,\n        codeforces: {\n          ...preferences.codeforces,\n          [name]: checked\n        }\n      });\n    }\n  };\n\n  // 3) Submit updated preferences to the server\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // POST to /api/user/preferences\n      await axios.post('http://localhost:5001/api/user/preferences', {\n        reminderPreferences: preferences\n      }, {\n        withCredentials: true\n      });\n      setMessage('Preferences updated successfully.');\n    } catch (error) {\n      console.error(\"Error updating preferences:\", error);\n      setMessage('Error updating preferences.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"leetcode\",\n            checked: preferences.leetcode,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), \"\\xA0Receive reminders for LeetCode contests\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Codeforces Contest Reminders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"div1\",\n            checked: preferences.codeforces.div1,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), \"\\xA0Div1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"div3\",\n            checked: preferences.codeforces.div3,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), \"\\xA0Div3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"div4\",\n            checked: preferences.codeforces.div4,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), \"\\xA0Div4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '10px 20px'\n        },\n        children: \"Update Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n_s(Preferences, \"r9VIY/6VqdZ5MBrD5GmJrFNJUYw=\");\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Preferences","_s","preferences","setPreferences","leetcode","codeforces","div1","div3","div4","message","setMessage","fetchPreferences","response","get","withCredentials","data","error","console","handleCheckboxChange","event","name","checked","target","handleSubmit","e","preventDefault","post","reminderPreferences","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","onChange","marginTop","_c","$RefreshReg$"],"sources":["/Users/ambarsinha/Desktop/Contest Alert/frontend/src/components/Preferences.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function Preferences() {\n//     const [preferences, setPreferences] = useState({\n//         leetcode: false,\n//         codeforces: {\n//             div1: false,\n//             div3: false,\n//             div4: false\n//         }\n//     });\n//     const [message, setMessage] = useState('');\n\n//     const handleCheckboxChange = (event) => {\n//         const { name, checked } = event.target;\n//         if (name === 'leetcode') {\n//             setPreferences({ ...preferences, leetcode: checked });\n//         } else {\n//             // Update Codeforces preference (div1, div3, or div4)\n//             setPreferences({\n//                 ...preferences,\n//                 codeforces: { ...preferences.codeforces, [name]: checked }\n//             });\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post(\n//                 'http://localhost:5001/api/user/preferences',\n//                 { reminderPreferences: preferences },\n//                 { withCredentials: true }\n//             );\n//             setMessage('Preferences updated successfully.');\n//         } catch (error) {\n//             console.error(\"Error updating preferences:\", error);\n//             setMessage('Error updating preferences.');\n//         }\n//     };\n\n//     return (\n//         <div style={{ padding: '20px' }}>\n//             <h1>User Preferences</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div style={{ marginBottom: '1rem' }}>\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"leetcode\"\n//                             checked={preferences.leetcode}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Receive reminders for LeetCode contests\n//                     </label>\n//                 </div>\n//                 <div style={{ marginBottom: '1rem' }}>\n//                     <h3>Codeforces Contest Reminders</h3>\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div1\"\n//                             checked={preferences.codeforces.div1}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div1\n//                     </label>\n//                     <br />\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div3\"\n//                             checked={preferences.codeforces.div3}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div3\n//                     </label>\n//                     <br />\n//                     <label>\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"div4\"\n//                             checked={preferences.codeforces.div4}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         &nbsp;Div4\n//                     </label>\n//                 </div>\n//                 <button type=\"submit\" style={{ padding: '10px 20px' }}>Update Preferences</button>\n//             </form>\n//             {message && <p style={{ marginTop: '1rem' }}>{message}</p>}\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Preferences() {\n    const [preferences, setPreferences] = useState({\n        leetcode: false,\n        codeforces: {\n            div1: false,\n            div3: false,\n            div4: false\n        }\n    });\n    const [message, setMessage] = useState('');\n\n    // 1) Fetch the user's preferences when the component mounts\n    useEffect(() => {\n        async function fetchPreferences() {\n            try {\n                // GET request to /api/user-preferences\n                const response = await axios.get('http://localhost:5001/api/user-preferences', {\n                    withCredentials: true\n                });\n                // response.data should look like:\n                // { leetcode: true/false, codeforces: { div1: ..., div3: ..., div4: ... } }\n                setPreferences(response.data);\n            } catch (error) {\n                console.error(\"Error fetching preferences:\", error);\n            }\n        }\n\n        fetchPreferences();\n    }, []);\n\n    // 2) Handle checkbox changes locally in state\n    const handleCheckboxChange = (event) => {\n        const { name, checked } = event.target;\n        if (name === 'leetcode') {\n            setPreferences({ ...preferences, leetcode: checked });\n        } else {\n            setPreferences({\n                ...preferences,\n                codeforces: { ...preferences.codeforces, [name]: checked }\n            });\n        }\n    };\n\n    // 3) Submit updated preferences to the server\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // POST to /api/user/preferences\n            await axios.post(\n                'http://localhost:5001/api/user/preferences',\n                { reminderPreferences: preferences },\n                { withCredentials: true }\n            );\n            setMessage('Preferences updated successfully.');\n        } catch (error) {\n            console.error(\"Error updating preferences:\", error);\n            setMessage('Error updating preferences.');\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>User Preferences</h1>\n            <form onSubmit={handleSubmit}>\n                <div style={{ marginBottom: '1rem' }}>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"leetcode\"\n                            checked={preferences.leetcode}\n                            onChange={handleCheckboxChange}\n                        />\n                        &nbsp;Receive reminders for LeetCode contests\n                    </label>\n                </div>\n                <div style={{ marginBottom: '1rem' }}>\n                    <h3>Codeforces Contest Reminders</h3>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"div1\"\n                            checked={preferences.codeforces.div1}\n                            onChange={handleCheckboxChange}\n                        />\n                        &nbsp;Div1\n                    </label>\n                    <br />\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"div3\"\n                            checked={preferences.codeforces.div3}\n                            onChange={handleCheckboxChange}\n                        />\n                        &nbsp;Div3\n                    </label>\n                    <br />\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"div4\"\n                            checked={preferences.codeforces.div4}\n                            onChange={handleCheckboxChange}\n                        />\n                        &nbsp;Div4\n                    </label>\n                </div>\n                <button type=\"submit\" style={{ padding: '10px 20px' }}>\n                    Update Preferences\n                </button>\n            </form>\n            {message && <p style={{ marginTop: '1rem' }}>{message}</p>}\n        </div>\n    );\n}\n\nexport default Preferences;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}