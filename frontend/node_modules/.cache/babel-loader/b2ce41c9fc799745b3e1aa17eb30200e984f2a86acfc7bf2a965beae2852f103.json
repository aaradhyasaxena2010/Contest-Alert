{"ast":null,"code":"var _jsxFileName = \"/Users/ambarsinha/Desktop/Contest Alert/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [user, setUser] = useState(null); // null = not logged in\n\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        // Check if user is logged in\n        const res = await axios.get('http://localhost:5001/api/user/info', {\n          withCredentials: true\n        });\n        setUser(res.data); // e.g. { name, email, reminderPreferences }\n      } catch (error) {\n        // If 401 or user not found, we stay with user = null\n        setUser(null);\n      }\n    }\n    fetchUser();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      // Call the logout endpoint\n      await axios.get('http://localhost:5001/auth/logout', {\n        withCredentials: true\n      });\n      // Clear user from state\n      setUser(null);\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to log in with Google.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:5001/auth/google\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '10px 20px',\n            fontSize: '16px'\n          },\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        onClick: handleLogout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","user","setUser","fetchUser","res","get","withCredentials","data","error","handleLogout","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","href","fontSize","email","onClick","_c","$RefreshReg$"],"sources":["/Users/ambarsinha/Desktop/Contest Alert/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Login() {\n    const [user, setUser] = useState(null); // null = not logged in\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                // Check if user is logged in\n                const res = await axios.get('http://localhost:5001/api/user/info', {\n                    withCredentials: true\n                });\n                setUser(res.data); // e.g. { name, email, reminderPreferences }\n            } catch (error) {\n                // If 401 or user not found, we stay with user = null\n                setUser(null);\n            }\n        }\n        fetchUser();\n    }, []);\n\n    const handleLogout = async () => {\n        try {\n            // Call the logout endpoint\n            await axios.get('http://localhost:5001/auth/logout', {\n                withCredentials: true\n            });\n            // Clear user from state\n            setUser(null);\n        } catch (error) {\n            console.error(\"Logout failed:\", error);\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Login</h1>\n            {/* If user is not logged in, show the \"Login with Google\" button */}\n            {!user && (\n                <>\n                    <p>Click the button below to log in with Google.</p>\n                    <a href=\"http://localhost:5001/auth/google\">\n                        <button style={{ padding: '10px 20px', fontSize: '16px' }}>\n                            Login with Google\n                        </button>\n                    </a>\n                </>\n            )}\n\n            {/* If user is logged in, show \"Already logged in\", user email, and Sign Out button */}\n            {user && (\n                <>\n                    <p>Already logged in as: <strong>{user.email}</strong></p>\n                    <button\n                        style={{ padding: '10px 20px', fontSize: '16px' }}\n                        onClick={handleLogout}\n                    >\n                        Sign Out\n                    </button>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Login;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}